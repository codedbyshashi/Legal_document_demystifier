import React, { useState } from 'react';
import { Globe, Volume2, Check } from 'lucide-react';

interface Language {
  code: string;
  name: string;
  nativeName: string;
  flag: string;
}

interface LanguageSelectorProps {
  selectedLanguage: string;
  onLanguageChange: (language: string) => void;
}

const languages: Language[] = [
  { code: 'en', name: 'English', nativeName: 'English', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'hi', name: 'Hindi', nativeName: 'рд╣рд┐рдВрджреА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'ta', name: 'Tamil', nativeName: 'родрооро┐ро┤рпН', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'te', name: 'Telugu', nativeName: 'р░др▒Жр░▓р▒Бр░Чр▒Б', flag: 'ЁЯЗоЁЯЗ│' },
];

// Complete translations object
const translations: Record<string, Record<string, string>> = {
  en: {
    app_subtitle: "AI-Powered Legal Document Analysis",
    secure_private: "Secure & Private",
    narration_intro: "Welcome to Legal Clarify. I will help you understand your legal documents in simple language.",
    stop_audio: "Stop",
    listen_audio: "Listen",
    upload_document: "Upload Your Legal Document",
    drag_drop_text: "Drag and drop your document here, or click to browse",
    choose_file: "Choose File",
    analyzing: "Analyzing Document...",
    analysis_complete: "Analysis Complete!",
    risk_level: "Risk Level",
    document_summary: "Document Summary",
    key_points: "Key Points",
    risky_clauses: "Risky Clauses",
    your_rights: "Your Rights",
    action_checklist: "Action Checklist",
    understand_documents: "Understand Your Legal Documents",
    upload_description: "Upload any legal document and get instant, clear explanations in plain English. Identify risks, understand your rights, and make informed decisions.",
    smart_reading: "Smart Document Reading",
    smart_reading_desc: "Our AI reads your document like a lawyer would, then explains it in simple words you can understand",
    spot_traps: "Spot the Traps",
    spot_traps_desc: "We highlight sneaky clauses that might cost you money or limit your rights",
    no_jargon: "No More Legal Jargon",
    no_jargon_desc: "We translate lawyer-speak into everyday language that actually makes sense",
    view_document: "View Document",
    download_summary: "Download Summary",
    quick_summary: "Quick Summary",
    risk_analysis: "Risk Analysis",
    key_points_remember: "Key Points to Remember",
    what_next: "What would you like to do next?",
    ask_questions: "Ask Questions About This Document",
    generate_checklist: "Generate Legal Checklist",
    legal_checklist: "Legal Checklist",
    download_checklist: "Download Checklist",
    uploaded_on: "Uploaded on",
    ai_reading: "Our AI is reading and understanding your document",
    redirecting: "Redirecting to your document analysis..."
  },
  hi: {
    app_subtitle: "AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдХрд╛рдиреВрдиреА рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    secure_private: "рд╕реБрд░рдХреНрд╖рд┐рдд рдФрд░ рдирд┐рдЬреА",
    narration_intro: "рд▓реАрдЧрд▓ рдХреНрд▓реИрд░рд┐рдлрд╛рдИ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдореИрдВ рдЖрдкрдХреЗ рдХрд╛рдиреВрдиреА рджрд╕реНрддрд╛рд╡реЗрдЬреЛрдВ рдХреЛ рд╕рд░рд▓ рднрд╛рд╖рд╛ рдореЗрдВ рд╕рдордЭрд╛рдиреЗ рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░реВрдВрдЧрд╛ред",
    stop_audio: "рд░реЛрдХреЗрдВ",
    listen_audio: "рд╕реБрдиреЗрдВ",
    upload_document: "рдЕрдкрдирд╛ рдХрд╛рдиреВрдиреА рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
    drag_drop_text: "рдЕрдкрдирд╛ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдпрд╣рд╛рдБ рдЦреАрдВрдЪреЗрдВ рдФрд░ рдЫреЛрдбрд╝реЗрдВ, рдпрд╛ рдмреНрд░рд╛рдЙрдЬрд╝ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ",
    choose_file: "рдлрд╝рд╛рдЗрд▓ рдЪреБрдиреЗрдВ",
    analyzing: "рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░ рд░рд╣реЗ рд╣реИрдВ...",
    analysis_complete: "рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкреВрд░рд╛!",
    risk_level: "рдЬреЛрдЦрд┐рдо рд╕реНрддрд░",
    document_summary: "рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╕рд╛рд░рд╛рдВрд╢",
    key_points: "рдореБрдЦреНрдп рдмрд┐рдВрджреБ",
    risky_clauses: "рдЬреЛрдЦрд┐рдо рднрд░реА рд╢рд░реНрддреЗрдВ",
    your_rights: "рдЖрдкрдХреЗ рдЕрдзрд┐рдХрд╛рд░",
    action_checklist: "рдХрд╛рд░реНрдп рд╕реВрдЪреА",
    understand_documents: "рдЕрдкрдиреЗ рдХрд╛рдиреВрдиреА рджрд╕реНрддрд╛рд╡реЗрдЬреЛрдВ рдХреЛ рд╕рдордЭреЗрдВ",
    upload_description: "рдХреЛрдИ рднреА рдХрд╛рдиреВрдиреА рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдФрд░ рддреБрд░рдВрдд рд╕реНрдкрд╖реНрдЯ рд╡реНрдпрд╛рдЦреНрдпрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред рдЬреЛрдЦрд┐рдореЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдХрд░реЗрдВ, рдЕрдкрдиреЗ рдЕрдзрд┐рдХрд╛рд░реЛрдВ рдХреЛ рд╕рдордЭреЗрдВред",
    smart_reading: "рд╕реНрдорд╛рд░реНрдЯ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдкрдарди",
    smart_reading_desc: "рд╣рдорд╛рд░рд╛ AI рдЖрдкрдХреЗ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХреЛ рд╡рдХреАрд▓ рдХреА рддрд░рд╣ рдкрдврд╝рддрд╛ рд╣реИ, рдлрд┐рд░ рд╕рд░рд▓ рд╢рдмреНрджреЛрдВ рдореЗрдВ рд╕рдордЭрд╛рддрд╛ рд╣реИ",
    spot_traps: "рдЬрд╛рд▓реЛрдВ рдХреЛ рдкрдХрдбрд╝реЗрдВ",
    spot_traps_desc: "рд╣рдо рдЫреБрдкреА рд╣реБрдИ рд╢рд░реНрддреЛрдВ рдХреЛ рдЙрдЬрд╛рдЧрд░ рдХрд░рддреЗ рд╣реИрдВ рдЬреЛ рдЖрдкрдХрд╛ рдкреИрд╕рд╛ рдЦрд░реНрдЪ рдХрд░ рд╕рдХрддреА рд╣реИрдВ",
    no_jargon: "рдХреЛрдИ рдХрд╛рдиреВрдиреА рд╢рдмреНрджрдЬрд╛рд▓ рдирд╣реАрдВ",
    no_jargon_desc: "рд╣рдо рд╡рдХреАрд▓ рдХреА рднрд╛рд╖рд╛ рдХреЛ рд░реЛрдЬрдорд░реНрд░рд╛ рдХреА рднрд╛рд╖рд╛ рдореЗрдВ рдмрджрд▓рддреЗ рд╣реИрдВ",
    view_document: "рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рджреЗрдЦреЗрдВ",
    download_summary: "рд╕рд╛рд░рд╛рдВрд╢ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ",
    quick_summary: "рддреНрд╡рд░рд┐рдд рд╕рд╛рд░рд╛рдВрд╢",
    risk_analysis: "рдЬреЛрдЦрд┐рдо рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    key_points_remember: "рдпрд╛рдж рд░рдЦрдиреЗ рдпреЛрдЧреНрдп рдореБрдЦреНрдп рдмрд┐рдВрджреБ",
    what_next: "рдЖрдк рдЖрдЧреЗ рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?",
    ask_questions: "рдЗрд╕ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ",
    generate_checklist: "рдХрд╛рдиреВрдиреА рдЪреЗрдХрд▓рд┐рд╕реНрдЯ рдмрдирд╛рдПрдВ",
    legal_checklist: "рдХрд╛рдиреВрдиреА рдЪреЗрдХрд▓рд┐рд╕реНрдЯ",
    download_checklist: "рдЪреЗрдХрд▓рд┐рд╕реНрдЯ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ",
    uploaded_on: "рдЕрдкрд▓реЛрдб рдХрд┐рдпрд╛ рдЧрдпрд╛",
    ai_reading: "рд╣рдорд╛рд░рд╛ AI рдЖрдкрдХреЗ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХреЛ рдкрдврд╝ рдФрд░ рд╕рдордЭ рд░рд╣рд╛ рд╣реИ",
    redirecting: "рдЖрдкрдХреЗ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкрд░ рднреЗрдЬрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ..."
  },
  ta: {
    app_subtitle: "AI-роЗропроЩрпНроХрпБроорпН роЪроЯрпНроЯ роЖро╡рог рокроХрпБрокрпНрокро╛ропрпНро╡рпБ",
    secure_private: "рокро╛родрпБроХро╛рокрпНрокро╛рой рооро▒рпНро▒рпБроорпН родройро┐рокрпНрокроЯрпНроЯ",
    narration_intro: "ро▓рпАроХро▓рпН роХро┐ро│ро╛ро░ро┐роГрокрпИроХрпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН. роЙроЩрпНроХро│рпН роЪроЯрпНроЯ роЖро╡рогроЩрпНроХро│рпИ роОро│ро┐роп роорпКро┤ро┐ропро┐ро▓рпН рокрпБро░ро┐роирпНродрпБроХрпКро│рпНро│ роЙродро╡рпБро╡рпЗройрпН.",
    stop_audio: "роиро┐ро▒рпБродрпНродрпБ",
    listen_audio: "роХрпЗро│рпБроЩрпНроХро│рпН",
    upload_document: "роЙроЩрпНроХро│рпН роЪроЯрпНроЯ роЖро╡рогродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
    drag_drop_text: "роЙроЩрпНроХро│рпН роЖро╡рогродрпНродрпИ роЗроЩрпНроХрпЗ роЗро┤рпБродрпНродрпБ ро╡ро┐роЯро╡рпБроорпН, роЕро▓рпНро▓родрпБ роЙро▓ро╛ро╡ роХро┐ро│ро┐роХрпН роЪрпЖропрпНропро╡рпБроорпН",
    choose_file: "роХрпЛрокрпНрокрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН",
    analyzing: "роЖро╡рогродрпНродрпИ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНроХро┐ро▒родрпБ...",
    analysis_complete: "рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роорпБроЯро┐роирпНродродрпБ!",
    risk_level: "роЖрокродрпНродрпБ роиро┐ро▓рпИ",
    document_summary: "роЖро╡рог роЪрпБро░рпБроХрпНроХроорпН",
    key_points: "роорпБроХрпНроХро┐роп рокрпБро│рпНро│ро┐роХро│рпН",
    risky_clauses: "роЖрокродрпНродро╛рой ро╡ро┐родро┐роХро│рпН",
    your_rights: "роЙроЩрпНроХро│рпН роЙро░ро┐роорпИроХро│рпН",
    action_checklist: "роЪрпЖропро▓рпН рокроЯрпНроЯро┐ропро▓рпН",
    understand_documents: "роЙроЩрпНроХро│рпН роЪроЯрпНроЯ роЖро╡рогроЩрпНроХро│рпИрокрпН рокрпБро░ро┐роирпНродрпБроХрпКро│рпНро│рпБроЩрпНроХро│рпН",
    upload_description: "роОроирпНрод роЪроЯрпНроЯ роЖро╡рогродрпНродрпИропрпБроорпН рокродро┐ро╡рпЗро▒рпНро▒ро┐ роЙроЯройроЯро┐ропро╛роХ родрпЖро│ро┐ро╡ро╛рой ро╡ро┐ро│роХрпНроХроЩрпНроХро│рпИрокрпН рокрпЖро▒рпБроЩрпНроХро│рпН",
    smart_reading: "ро╕рпНрооро╛ро░рпНроЯрпН роЖро╡рог ро╡ро╛роЪро┐рокрпНрокрпБ",
    smart_reading_desc: "роОроЩрпНроХро│рпН AI роЙроЩрпНроХро│рпН роЖро╡рогродрпНродрпИ ро╡ро┤роХрпНроХро▒ро┐роЮро░рпН рокрпЛро▓ рокроЯро┐родрпНродрпБ роОро│ро┐роп ро╡ро╛ро░рпНродрпНродрпИроХро│ро┐ро▓рпН ро╡ро┐ро│роХрпНроХрпБроХро┐ро▒родрпБ",
    spot_traps: "рокрпКро▒ро┐роХро│рпИроХрпН роХрогрпНроЯро▒ро┐ропрпБроЩрпНроХро│рпН",
    spot_traps_desc: "роЙроЩрпНроХро│рпН рокрогродрпНродрпИ роЪрпЖро▓ро╡ро┤ро┐роХрпНроХрпБроорпН рооро▒рпИроирпНрод ро╡ро┐родро┐роХро│рпИ роиро╛роЩрпНроХро│рпН роорпБройрпНройро┐ро▓рпИрокрпНрокроЯрпБродрпНродрпБроХро┐ро▒рпЛроорпН",
    no_jargon: "роЪроЯрпНроЯ ро╡ро╛ро░рпНродрпНродрпИроХро│рпН роЗро▓рпНро▓рпИ",
    no_jargon_desc: "ро╡ро┤роХрпНроХро▒ро┐роЮро░рпН роорпКро┤ро┐ропрпИ роЕройрпНро▒ро╛роЯ роорпКро┤ро┐ропро╛роХ рооро╛ро▒рпНро▒рпБроХро┐ро▒рпЛроорпН",
    view_document: "роЖро╡рогродрпНродрпИрокрпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН",
    download_summary: "роЪрпБро░рпБроХрпНроХродрпНродрпИ рокродро┐ро╡ро┐ро▒роХрпНроХро╡рпБроорпН",
    quick_summary: "ро╡ро┐ро░рпИро╡рпБ роЪрпБро░рпБроХрпНроХроорпН",
    risk_analysis: "роЖрокродрпНродрпБ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ",
    key_points_remember: "роиро┐ройрпИро╡ро┐ро▓рпН роХрпКро│рпНро│ ро╡рпЗрогрпНроЯро┐роп роорпБроХрпНроХро┐роп рокрпБро│рпНро│ро┐роХро│рпН",
    what_next: "роирпАроЩрпНроХро│рпН роЕроЯрпБродрпНродрпБ роОройрпНрой роЪрпЖропрпНроп ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│рпН?",
    ask_questions: "роЗроирпНрод роЖро╡рогродрпНродрпИрокрпН рокро▒рпНро▒ро┐ роХрпЗро│рпНро╡ро┐роХро│рпН роХрпЗро│рпБроЩрпНроХро│рпН",
    generate_checklist: "роЪроЯрпНроЯ роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ рокроЯрпНроЯро┐ропро▓рпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН",
    legal_checklist: "роЪроЯрпНроЯ роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ рокроЯрпНроЯро┐ропро▓рпН",
    download_checklist: "роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ рокроЯрпНроЯро┐ропро▓рпИ рокродро┐ро╡ро┐ро▒роХрпНроХро╡рпБроорпН",
    uploaded_on: "рокродро┐ро╡рпЗро▒рпНро▒рокрпНрокроЯрпНроЯродрпБ",
    ai_reading: "роОроЩрпНроХро│рпН AI роЙроЩрпНроХро│рпН роЖро╡рогродрпНродрпИ рокроЯро┐родрпНродрпБ рокрпБро░ро┐роирпНродрпБроХрпКро│рпНроХро┐ро▒родрпБ",
    redirecting: "роЙроЩрпНроХро│рпН роЖро╡рог рокроХрпБрокрпНрокро╛ропрпНро╡рпБроХрпНроХрпБ родро┐ро░рпБрокрпНрокро┐ ро╡ро┐роЯрокрпНрокроЯрпБроХро┐ро▒родрпБ..."
  },
  te: {
    app_subtitle: "AI-р░ир░бр░┐р░Ър▒З р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░кр░др▒Нр░░ р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г",
    secure_private: "р░╕р▒Бр░░р░Хр▒Нр░╖р░┐р░др░ор▒Ир░и р░ор░░р░┐р░пр▒Б р░кр▒Нр░░р▒Ир░╡р▒Зр░Яр▒Н",
    narration_intro: "р░▓р▒Ар░Чр░▓р▒Н р░Хр▒Нр░▓р░╛р░░р░┐р░лр▒Ир░Хр░┐ р░╕р▒Нр░╡р░╛р░Чр░др░В. р░ор▒А р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░кр░др▒Нр░░р░╛р░▓р░ир▒Б р░╕р░░р░│р░ор▒Ир░и р░нр░╛р░╖р░▓р▒Л р░Ер░░р▒Нр░ер░В р░Ър▒Зр░╕р▒Бр░Хр▒Лр░╡р░бр░Вр░▓р▒Л р░╕р░╣р░╛р░пр░В р░Ър▒Зр░╕р▒Нр░др░╛р░ир▒Б.",
    stop_audio: "р░Жр░кр░Вр░бр░┐",
    listen_audio: "р░╡р░┐р░ир░Вр░бр░┐",
    upload_document: "р░ор▒А р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    drag_drop_text: "р░ор▒А р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Зр░Хр▒Нр░Хр░б р░▓р░╛р░Чр░┐ р░╡р░жр░▓р░Вр░бр░┐, р░▓р▒Зр░жр░╛ р░мр▒Нр░░р▒Мр░Ьр▒Н р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░Хр▒Нр░▓р░┐р░Хр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    choose_file: "р░лр▒Ир░▓р▒Н р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
    analyzing: "р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐...",
    analysis_complete: "р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г р░кр▒Вр░░р▒Нр░др░пр░┐р░Вр░жр░┐!",
    risk_level: "р░кр▒Нр░░р░ор░╛р░ж р░╕р▒Нр░ер░╛р░пр░┐",
    document_summary: "р░кр░др▒Нр░░ р░╕р░╛р░░р░╛р░Вр░╢р░В",
    key_points: "р░ор▒Бр░Цр▒Нр░п р░Ер░Вр░╢р░╛р░▓р▒Б",
    risky_clauses: "р░кр▒Нр░░р░ор░╛р░жр░Хр░░ р░ир░┐р░мр░Вр░зр░ир░▓р▒Б",
    your_rights: "р░ор▒А р░╣р░Хр▒Нр░Хр▒Бр░▓р▒Б",
    action_checklist: "р░Ър░░р▒Нр░п р░Ьр░╛р░мр░┐р░др░╛",
    understand_documents: "р░ор▒А р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░кр░др▒Нр░░р░╛р░▓р░ир▒Б р░Ер░░р▒Нр░ер░В р░Ър▒Зр░╕р▒Бр░Хр▒Лр░Вр░бр░┐",
    upload_description: "р░Пр░жр▒Ир░ир░╛ р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░╕р░┐ р░др░Хр▒Нр░╖р░гр░ор▒З р░╕р▒Нр░кр░╖р▒Нр░Яр░ор▒Ир░и р░╡р░┐р░╡р░░р░гр░▓р░ир▒Б р░кр▒Кр░Вр░жр░Вр░бр░┐",
    smart_reading: "р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░кр░др▒Нр░░ р░Ър░жр░╡р░бр░В",
    smart_reading_desc: "р░ор░╛ AI р░ор▒А р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░ир▒Нр░пр░╛р░пр░╡р░╛р░жр░┐ р░▓р░╛р░Чр░╛ р░Ър░жр░┐р░╡р░┐ р░╕р░░р░│р░ор▒Ир░и р░кр░жр░╛р░▓р░▓р▒Л р░╡р░┐р░╡р░░р░┐р░╕р▒Нр░др▒Бр░Вр░жр░┐",
    spot_traps: "р░Йр░Ър▒Нр░Ър▒Бр░▓р░ир▒Б р░Чр▒Бр░░р▒Нр░др░┐р░Вр░Ър░Вр░бр░┐",
    spot_traps_desc: "р░ор▒А р░бр░мр▒Нр░мр▒Б р░Цр░░р▒Нр░Ър▒Б р░Ър▒Зр░╕р▒З р░жр░╛р░Ър░┐р░и р░ир░┐р░мр░Вр░зр░ир░▓р░ир▒Б р░ор▒Зр░ор▒Б р░╣р▒Ир░▓р▒Ир░Яр▒Н р░Ър▒Зр░╕р▒Нр░др░╛р░ор▒Б",
    no_jargon: "р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░кр░жр░Ьр░╛р░▓р░В р░▓р▒Зр░жр▒Б",
    no_jargon_desc: "р░ир▒Нр░пр░╛р░пр░╡р░╛р░жр░┐ р░нр░╛р░╖р░ир▒Б р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░нр░╛р░╖р░Чр░╛ р░ор░╛р░░р▒Нр░Ър▒Бр░др░╛р░ор▒Б",
    view_document: "р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ър▒Вр░бр░Вр░бр░┐",
    download_summary: "р░╕р░╛р░░р░╛р░Вр░╢р░╛р░ир▒Нр░ир░┐ р░бр▒Мр░ир▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    quick_summary: "р░др▒Нр░╡р░░р░┐р░д р░╕р░╛р░░р░╛р░Вр░╢р░В",
    risk_analysis: "р░кр▒Нр░░р░ор░╛р░ж р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г",
    key_points_remember: "р░Чр▒Бр░░р▒Нр░др▒Бр░Вр░Ър▒Бр░Хр▒Лр░╡р░╛р░▓р▒Нр░╕р░┐р░и р░ор▒Бр░Цр▒Нр░п р░Ер░Вр░╢р░╛р░▓р▒Б",
    what_next: "р░ор▒Ар░░р▒Б р░др░░р▒Нр░╡р░╛р░д р░Пр░ор░┐ р░Ър▒Зр░пр░╛р░▓р░ир░┐ р░Ер░ир▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р▒Б?",
    ask_questions: "р░И р░кр░др▒Нр░░р░В р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░кр▒Нр░░р░╢р▒Нр░ир░▓р▒Б р░Ер░бр░Чр░Вр░бр░┐",
    generate_checklist: "р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░Ър▒Жр░Хр▒НтАМр░▓р░┐р░╕р▒Нр░Яр▒Н р░░р▒Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░Вр░бр░┐",
    legal_checklist: "р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░Ър▒Жр░Хр▒НтАМр░▓р░┐р░╕р▒Нр░Яр▒Н",
    download_checklist: "р░Ър▒Жр░Хр▒НтАМр░▓р░┐р░╕р▒Нр░Яр▒Н р░бр▒Мр░ир▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    uploaded_on: "р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐",
    ai_reading: "р░ор░╛ AI р░ор▒А р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ър░жр▒Бр░╡р▒Бр░др▒В р░Ер░░р▒Нр░ер░В р░Ър▒Зр░╕р▒Бр░Хр▒Бр░Вр░Яр▒Лр░Вр░жр░┐",
    redirecting: "р░ор▒А р░кр░др▒Нр░░ р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░гр░Хр▒Б р░жр░╛р░░р░┐ р░ор░│р▒Нр░▓р░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐..."
  }
};

export const getLocalizedText = (key: string, language: string): string => {
  return translations[language]?.[key] || translations.en[key] || key;
};

export const LanguageSelector: React.FC<LanguageSelectorProps> = ({ 
  selectedLanguage, 
  onLanguageChange 
}) => {
  const [isOpen, setIsOpen] = useState(false);
  const [isNarrating, setIsNarrating] = useState(false);

  const selectedLang = languages.find(lang => lang.code === selectedLanguage) || languages[0];

  const handleLanguageSelect = (langCode: string) => {
    onLanguageChange(langCode);
    setIsOpen(false);
  };

  const handleNarration = () => {
    if (isNarrating) {
      speechSynthesis.cancel();
      setIsNarrating(false);
    } else {
      const text = getLocalizedText('narration_intro', selectedLanguage);
      const utterance = new SpeechSynthesisUtterance(text);
      
      // Set language-specific voice settings
      const voices = speechSynthesis.getVoices();
      const langVoice = voices.find(voice => 
        voice.lang.startsWith(selectedLanguage === 'hi' ? 'hi' : 
                              selectedLanguage === 'ta' ? 'ta' : 
                              selectedLanguage === 'te' ? 'te' : 'en')
      );
      
      if (langVoice) utterance.voice = langVoice;
      utterance.rate = 0.8;
      utterance.onend = () => setIsNarrating(false);
      
      speechSynthesis.speak(utterance);
      setIsNarrating(true);
    }
  };

  return (
    <div className="relative">
      <div className="flex items-center space-x-3">
        <div className="relative">
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="flex items-center space-x-2 px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
          >
            <Globe className="w-4 h-4 text-gray-600" />
            <span className="text-sm font-medium">{selectedLang.flag} {selectedLang.nativeName}</span>
          </button>

          {isOpen && (
            <div className="absolute top-full mt-2 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-50">
              {languages.map((lang) => (
                <button
                  key={lang.code}
                  onClick={() => handleLanguageSelect(lang.code)}
                  className="w-full flex items-center justify-between px-4 py-3 hover:bg-gray-50 transition-colors first:rounded-t-lg last:rounded-b-lg"
                >
                  <div className="flex items-center space-x-3">
                    <span className="text-lg">{lang.flag}</span>
                    <div className="text-left">
                      <p className="text-sm font-medium text-gray-900">{lang.nativeName}</p>
                      <p className="text-xs text-gray-500">{lang.name}</p>
                    </div>
                  </div>
                  {selectedLanguage === lang.code && (
                    <Check className="w-4 h-4 text-green-600" />
                  )}
                </button>
              ))}
            </div>
          )}
        </div>

        <button
          onClick={handleNarration}
          className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${
            isNarrating 
              ? 'bg-red-100 text-red-600 hover:bg-red-200' 
              : 'bg-blue-100 text-blue-600 hover:bg-blue-200'
          }`}
        >
          <Volume2 className="w-4 h-4" />
          <span className="text-sm font-medium">
            {isNarrating ? getLocalizedText('stop_audio', selectedLanguage) : getLocalizedText('listen_audio', selectedLanguage)}
          </span>
        </button>
      </div>
    </div>
  );
};